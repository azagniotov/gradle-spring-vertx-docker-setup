import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "${springBootVersion}"
    id "org.unbroken-dome.test-sets" version "3.0.1"
    id "jacoco"
}

group = "io.github.azagniotov"
version = "1.0.0-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenLocal()
    maven { url "https://repo.maven.apache.org/maven2" }
    jcenter { url "https://jcenter.bintray.com" }
}

testSets {
    integrationTest {
        dirName = 'integration-test'
    }
}

dependencies {
    // https://stackoverflow.com/questions/57717042/do-we-need-io-spring-dependency-management-gradle-plugin-when-already-using-id
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "ch.qos.logback:logback-classic:1.2.3"

    implementation "io.vertx:vertx-web:${vertxVersion}"
    implementation "io.vertx:vertx-web-api-contract:${vertxVersion}"

    OperatingSystem os = DefaultNativePlatform.currentOperatingSystem;
    if (os.linux) {
        implementation "io.netty:netty-transport-native-epoll:${nettyVersion}:linux-x86_64"
    }

    if (os.macOsX || os.freeBSD) {
        // MacOS Sierra and above are supported.
        implementation "io.netty:netty-transport-native-kqueue:${nettyVersion}:osx-x86_64"
    }

    testImplementation "junit:junit:4.13.1"
    testImplementation "org.mockito:mockito-core:3.3.3"

    testImplementation("org.springframework.boot:spring-boot-starter-web") {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
    }
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

idea {
    project {
        jdkName = "1.8"
        languageLevel = "1.8"
        vcs = "Git"
    }
}

bootRun {
    jvmArgs "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
    systemProperty 'spring.profiles.active', "${springProfile}"
}

springBoot {
    mainClassName = "io.github.azagniotov.app.Main"
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test.outputs.upToDateWhen { false }
integrationTest.outputs.upToDateWhen { false }

